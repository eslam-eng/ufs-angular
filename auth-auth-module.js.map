{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/components/login/login.component.html","webpack:///./src/app/auth/components/login/login.component.scss","webpack:///./src/app/auth/components/login/login.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {AuthRoutingModule} from './auth-routing.module';\nimport {LoginComponent} from './components/login/login.component';\nimport {SharedModule} from '../shared/shared.module'; \n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [ \n    SharedModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {\n}\n","module.exports = \"<div class=\\\"login-box\\\">\\n    <!-- /.login-logo -->\\n    <div class=\\\"login-box-body material-shadow w3-animate-zoom\\\">\\n        <div class=\\\"login-logo w3-animate-top\\\">\\n            <img src=\\\"/assets/img/logo.png\\\" alt=\\\"\\\" style=\\\"width: 90px\\\">\\n            <br>\\n            <a href=\\\"#\\\" class=\\\"w3-text-gray text-capitalize w3-xxxlarge w3-text-dark\\\"><b> UFS  </b></a>\\n        </div>\\n        <p class=\\\"login-box-msg\\\"><b>{{ 'login with account' | trans }}</b></p>\\n\\n        <div class=\\\"form-group has-feedback\\\">\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userAuth.email\\\" placeholder=\\\"{{ 'email' | trans }}\\\">\\n            <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n        </div>\\n        <div class=\\\"form-group has-feedback\\\">\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userAuth.password\\\" (keyup.enter)=\\\"login()\\\" placeholder=\\\"{{ 'password' | trans }}\\\">\\n            <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-8\\\">\\n                <div class=\\\"checkbox icheck\\\">\\n                    <!--\\n              <label class=\\\"\\\">\\n                <div class=\\\"icheckbox_square-blue\\\" aria-checked=\\\"false\\\" aria-disabled=\\\"false\\\" style=\\\"position: relative;\\\"><input type=\\\"checkbox\\\" style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;\\\"><ins class=\\\"iCheck-helper\\\" style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; background: rgb(255, 255, 255); border: 0px; opacity: 0;\\\"></ins></div>\\n                Remember Me\\n              </label>\\n              -->\\n                </div>\\n            </div>\\n            <!-- /.col -->\\n            <div class=\\\"col-xs-4\\\">\\n                <button type=\\\"button\\\" (click)=\\\"login()\\\" [disabled]=\\\"isSubmitted\\\" class=\\\"btn btn-primary btn-block btn-flat\\\">{{ 'Sign In' | trans }}</button>\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n\\n        <!-- /.social-auth-links\\n\\n      <a href=\\\"#\\\">I forgot my password</a><br>\\n      <a href=\\\"register.html\\\" class=\\\"text-center\\\">Register a new membership</a>\\n  -->\\n    </div>\\n    <!-- /.login-box-body -->\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnChanges, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthService} from '../../../shared/services/auth.service';\nimport { Cache } from '../../../shared/cache';\nimport { Message } from '../../../shared/message';\nimport { AppModule } from '../../../app.module';\nimport { Auth } from 'src/app/shared/auth';\nimport { GlobalService } from '../../../shared/services/global.service';\nimport { Autoloader } from '../../../admin/helpers/autoloader';\n\n@Component({\n  selector: 'app-login',\n  styleUrls: ['./login.component.scss'],\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  public userAuth: any = {};\n\n  public doc: any = AppModule.doc;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private service: GlobalService,\n    private router: Router\n  ) {\n    if (Auth.getApiToken())\n      this.router.navigate(['/dashboard'], {\n      }).then().catch();\n  }\n\n  public isSubmitted = false;\n\n  ngOnInit() {\n    this.doc.jquery('body').addClass('login-background');\n    this.route.queryParams.subscribe((params) => {\n      // noinspection TsLint\n    });\n  }\n\n  login() {\n    this.isSubmitted = true;\n\n    this.authService.login(this.userAuth).subscribe((result) => {\n        const data: any = result;\n\n        if (data.status == 1) {\n          // cache user\n          Cache.set(AuthService.USER_PRFIX, data.data);\n\n          // cache api token\n          Cache.set(AuthService.API_TOKEN_PRFIX, data.data.api_token);\n\n          // start autoloader\n          window.location.href = \"/dashboard\";\n          /*setTimeout(() => {\n            Autoloader.autoload(this.service);\n          }, 1000);*/\n\n          //this.router.navigate(['/dashboard']).then().catch();\n        } else {\n          Message.error(data.message);\n        }\n\n        this.isSubmitted = false;\n      },\n      (e) => {\n        Message.error(e);\n        this.isSubmitted = false;\n      }\n    );\n  }\n}\n"],"sourceRoot":""}