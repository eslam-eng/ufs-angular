{"version":3,"sources":["webpack:///./node_modules/angular-google-charts/fesm5/angular-google-charts.js","webpack:///./src/app/admin/helpers/autoloader.ts","webpack:///./src/app/shared/request.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAC+G;AACrH;AACZ;;AAE9C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,wBAAwB,4DAAc;AACtC,WAAW,EAAE;AACb,yBAAyB,4DAAc;;AAEvC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,+CAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,+BAA+B,0CAA0C,EAAE;AAC3E;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,sDAAsD;AACtD,SAAS,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI,GAAG;AAC5E,SAAS,6BAA6B,OAAO,oDAAM,2BAA2B,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACrG,SAAS,6BAA6B,OAAO,oDAAM,0BAA0B,GAAG,OAAO,sDAAQ,EAAE;AACjG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC,yBAAyB,0DAAY;AACrC,0BAA0B,0DAAY;AACtC,8BAA8B,0DAAY;AAC1C,8BAA8B,0DAAY;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+EAA+E,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,mEAAY;AAClC;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,qCAAqC,EAAE;AACrE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,qCAAqC,EAAE;AACrE;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gCAAgC,EAAE;AAC5D;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,qCAAqC,qEAAuB;AAC5D,qCAAqC,oBAAoB,gBAAgB,EAAE;AAC3E,iBAAiB;AACjB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,sDAAQ,EAAE,4DAA4D;AACrF;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,mBAAmB,sDAAQ;AAC3B;AACA;AA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","file":"default~admin-admin-module~settings-settings-module.js","sourcesContent":["import { __extends, __assign, __spread, __values } from 'tslib';\nimport { InjectionToken, Injectable, Inject, LOCALE_ID, Optional, Component, ChangeDetectionStrategy, ElementRef, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { of, Observable, Subject, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar CHART_VERSION = new InjectionToken('CHART_VERSION');\r\n/** @type {?} */\r\nvar GOOGLE_API_KEY = new InjectionToken('GOOGLE_API_KEY');\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar ScriptLoaderService = /** @class */ (function () {\r\n    function ScriptLoaderService(localeId, googleApiKey, chartVersion) {\r\n        this.localeId = localeId;\r\n        this.googleApiKey = googleApiKey;\r\n        this.chartVersion = chartVersion;\r\n        this.scriptSource = 'https://www.gstatic.com/charts/loader.js';\r\n        this.onLoadSubject = new Subject();\r\n        this.initialize();\r\n    }\r\n    Object.defineProperty(ScriptLoaderService.prototype, \"onReady\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (this.doneLoading) {\r\n                return of(true);\r\n            }\r\n            return this.onLoadSubject.asObservable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScriptLoaderService.prototype, \"doneLoading\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (typeof google === 'undefined' || typeof google.charts === 'undefined') {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScriptLoaderService.prototype, \"isLoading\", {\r\n        get: /**\r\n         * @private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var _this = this;\r\n            if (this.doneLoading) {\r\n                return false;\r\n            }\r\n            /** @type {?} */\r\n            var pageScripts = Array.from(document.getElementsByTagName('script'));\r\n            /** @type {?} */\r\n            var googleChartsScript = pageScripts.find((/**\r\n             * @param {?} script\r\n             * @return {?}\r\n             */\r\n            function (script) { return script.src === _this.scriptSource; }));\r\n            return googleChartsScript !== undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} packages\r\n     * @return {?}\r\n     */\r\n    ScriptLoaderService.prototype.loadChartPackages = /**\r\n     * @param {?} packages\r\n     * @return {?}\r\n     */\r\n    function (packages) {\r\n        var _this = this;\r\n        return new Observable((/**\r\n         * @param {?} observer\r\n         * @return {?}\r\n         */\r\n        function (observer) {\r\n            /** @type {?} */\r\n            var config = {\r\n                packages: packages,\r\n                language: _this.localeId,\r\n                mapsApiKey: _this.googleApiKey\r\n            };\r\n            google.charts.load(_this.chartVersion, config);\r\n            google.charts.setOnLoadCallback((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                observer.next();\r\n                observer.complete();\r\n            }));\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ScriptLoaderService.prototype.initialize = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.doneLoading && !this.isLoading) {\r\n            /** @type {?} */\r\n            var script = this.createScriptElement();\r\n            script.onload = (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this.onLoadSubject.next(true);\r\n                _this.onLoadSubject.complete();\r\n            });\r\n            script.onerror = (/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                console.error('Failed to load the google chart script!');\r\n                _this.onLoadSubject.error('Failed to load the google chart script!');\r\n                _this.onLoadSubject.complete();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    ScriptLoaderService.prototype.createScriptElement = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = this.scriptSource;\r\n        script.async = true;\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n        return script;\r\n    };\r\n    ScriptLoaderService.decorators = [\r\n        { type: Injectable }\r\n    ];\r\n    /** @nocollapse */\r\n    ScriptLoaderService.ctorParameters = function () { return [\r\n        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\r\n        { type: String, decorators: [{ type: Inject, args: [GOOGLE_API_KEY,] }, { type: Optional }] },\r\n        { type: String, decorators: [{ type: Inject, args: [CHART_VERSION,] }, { type: Optional }] }\r\n    ]; };\r\n    return ScriptLoaderService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GoogleChartPackagesHelper = /** @class */ (function () {\r\n    function GoogleChartPackagesHelper() {\r\n    }\r\n    /**\r\n     * @param {?} chartName\r\n     * @return {?}\r\n     */\r\n    GoogleChartPackagesHelper.getPackageForChartName = /**\r\n     * @param {?} chartName\r\n     * @return {?}\r\n     */\r\n    function (chartName) {\r\n        return GoogleChartPackagesHelper.ChartTypesToPackages[chartName];\r\n    };\r\n    GoogleChartPackagesHelper.ChartTypesToPackages = {\r\n        AnnotationChart: 'annotationchart',\r\n        AreaChart: 'corechart',\r\n        Bar: 'bar',\r\n        BarChart: 'corechart',\r\n        BubbleChart: 'corechart',\r\n        Calendar: 'calendar',\r\n        CandlestickChart: 'corechart',\r\n        ColumnChart: 'corechart',\r\n        ComboChart: 'corechart',\r\n        PieChart: 'corechart',\r\n        Gantt: 'gantt',\r\n        Gauge: 'gauge',\r\n        GeoChart: 'geochart',\r\n        Histogram: 'corechart',\r\n        Line: 'line',\r\n        LineChart: 'corechart',\r\n        Map: 'map',\r\n        OrgChart: 'orgchart',\r\n        Sankey: 'sankey',\r\n        Scatter: 'scatter',\r\n        ScatterChart: 'corechart',\r\n        SteppedAreaChart: 'corechart',\r\n        Table: 'table',\r\n        Timeline: 'timeline',\r\n        TreeMap: 'treemap',\r\n        WordTree: 'wordtree'\r\n    };\r\n    return GoogleChartPackagesHelper;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar RawChartComponent = /** @class */ (function () {\r\n    function RawChartComponent(element, loaderService) {\r\n        this.element = element;\r\n        this.loaderService = loaderService;\r\n        this.dynamicResize = false;\r\n        this.firstRowIsData = false;\r\n        this.error = new EventEmitter();\r\n        this.ready = new EventEmitter();\r\n        this.select = new EventEmitter();\r\n        this.mouseenter = new EventEmitter();\r\n        this.mouseleave = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.chartData == null) {\r\n            throw new Error('Can\\'t create a Google Chart without data!');\r\n        }\r\n        this.loaderService.onReady.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createChart();\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.addResizeListener();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.ngOnChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.wrapper) {\r\n            this.updateChart();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.getChartElement = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.element.nativeElement.firstElementChild;\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.createChart = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.loadNeededPackages().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.wrapper = new google.visualization.ChartWrapper();\r\n            _this.updateChart();\r\n        }));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.loadNeededPackages = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.loaderService.loadChartPackages([GoogleChartPackagesHelper.getPackageForChartName(this.chartData.chartType)]);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.updateChart = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // This check here is important to allow passing of a created dataTable as well as just an array\r\n        if (!(this.chartData.dataTable instanceof google.visualization.DataTable)) {\r\n            this.dataTable = google.visualization.arrayToDataTable((/** @type {?} */ (this.chartData.dataTable)), this.firstRowIsData);\r\n        }\r\n        else {\r\n            this.dataTable = this.chartData.dataTable;\r\n        }\r\n        this.wrapper.setDataTable(this.dataTable);\r\n        this.wrapper.setChartType(this.chartData.chartType);\r\n        this.wrapper.setOptions(this.chartData.options);\r\n        this.wrapper.setDataSourceUrl(this.chartData.dataSourceUrl);\r\n        this.wrapper.setQuery(this.chartData.query);\r\n        this.wrapper.setRefreshInterval(this.chartData.refreshInterval);\r\n        this.wrapper.setView(this.chartData.view);\r\n        this.removeChartEvents();\r\n        this.registerChartEvents();\r\n        if (this.formatter) {\r\n            this.formatData(this.dataTable);\r\n        }\r\n        this.wrapper.draw(this.element.nativeElement);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @param {?} dataTable\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.formatData = /**\r\n     * @protected\r\n     * @param {?} dataTable\r\n     * @return {?}\r\n     */\r\n    function (dataTable) {\r\n        if (this.formatter instanceof Array) {\r\n            this.formatter.forEach((/**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                value.formatter.format(dataTable, value.colIndex);\r\n            }));\r\n        }\r\n        else {\r\n            for (var i = 0; i < dataTable.getNumberOfColumns(); i++) {\r\n                this.formatter.format(dataTable, i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.addResizeListener = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.dynamicResize) {\r\n            fromEvent(window, 'resize')\r\n                .pipe(debounceTime(100))\r\n                .subscribe((/**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                _this.ngOnChanges();\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.removeChartEvents = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        google.visualization.events.removeAllListeners(this.wrapper);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.registerChartEvents = /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.registerChartEvent(this.wrapper, 'ready', (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.registerChartEvent(_this.wrapper.getChart(), 'onmouseover', (/**\r\n             * @param {?} event\r\n             * @return {?}\r\n             */\r\n            function (event) { return _this.mouseenter.emit(event); }));\r\n            _this.registerChartEvent(_this.wrapper.getChart(), 'onmouseout', (/**\r\n             * @param {?} event\r\n             * @return {?}\r\n             */\r\n            function (event) { return _this.mouseleave.emit(event); }));\r\n            _this.ready.emit('Chart Ready');\r\n        }));\r\n        this.registerChartEvent(this.wrapper, 'error', (/**\r\n         * @param {?} error\r\n         * @return {?}\r\n         */\r\n        function (error) { return _this.error.emit(error); }));\r\n        this.registerChartEvent(this.wrapper, 'select', (/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            /** @type {?} */\r\n            var selection = _this.wrapper.getChart().getSelection();\r\n            _this.select.emit(selection);\r\n        }));\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} object\r\n     * @param {?} eventName\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    RawChartComponent.prototype.registerChartEvent = /**\r\n     * @private\r\n     * @param {?} object\r\n     * @param {?} eventName\r\n     * @param {?} callback\r\n     * @return {?}\r\n     */\r\n    function (object, eventName, callback) {\r\n        google.visualization.events.addListener(object, eventName, callback);\r\n    };\r\n    RawChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'raw-chart',\r\n                    template: '',\r\n                    exportAs: 'raw-chart',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    styles: [':host { width: fit-content; display: block; }']\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    RawChartComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: ScriptLoaderService }\r\n    ]; };\r\n    RawChartComponent.propDecorators = {\r\n        chartData: [{ type: Input }],\r\n        formatter: [{ type: Input }],\r\n        dynamicResize: [{ type: Input }],\r\n        firstRowIsData: [{ type: Input }],\r\n        error: [{ type: Output }],\r\n        ready: [{ type: Output }],\r\n        select: [{ type: Output }],\r\n        mouseenter: [{ type: Output }],\r\n        mouseleave: [{ type: Output }]\r\n    };\r\n    return RawChartComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nvar GoogleChartComponent = /** @class */ (function (_super) {\r\n    __extends(GoogleChartComponent, _super);\r\n    function GoogleChartComponent(element, loaderService) {\r\n        var _this = _super.call(this, element, loaderService) || this;\r\n        _this.roles = new Array();\r\n        _this.width = undefined;\r\n        _this.height = undefined;\r\n        _this.options = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this.type == null) {\r\n            throw new Error('Can\\'t create a Google Chart without specifying a type!');\r\n        }\r\n        if (this.data == null) {\r\n            throw new Error('Can\\'t create a Google Chart without data!');\r\n        }\r\n        this.chartData = {\r\n            chartType: this.type\r\n        };\r\n        this.loaderService.onReady.subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.createChart();\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.ngOnChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.wrapper) {\r\n            this.chartData = {\r\n                chartType: this.type,\r\n                dataTable: this.getDataTable(),\r\n                options: this.parseOptions()\r\n            };\r\n        }\r\n        _super.prototype.ngOnChanges.call(this);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.parseOptions = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return __assign({ title: this.title, width: this.width, height: this.height }, this.options);\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.createChart = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.loadNeededPackages().subscribe((/**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            _this.chartData = {\r\n                chartType: _this.type,\r\n                dataTable: _this.getDataTable(),\r\n                options: _this.parseOptions()\r\n            };\r\n            _this.wrapper = new google.visualization.ChartWrapper();\r\n            _this.updateChart();\r\n        }));\r\n    };\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.getDataTable = /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.columnNames) {\r\n            /** @type {?} */\r\n            var columns = this.parseRoles(this.columnNames);\r\n            this.firstRowIsData = false;\r\n            return __spread([columns], this.data);\r\n        }\r\n        else {\r\n            this.firstRowIsData = true;\r\n            return this.data;\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {?} columnNames\r\n     * @return {?}\r\n     */\r\n    GoogleChartComponent.prototype.parseRoles = /**\r\n     * @private\r\n     * @param {?} columnNames\r\n     * @return {?}\r\n     */\r\n    function (columnNames) {\r\n        /** @type {?} */\r\n        var columnNamesWithRoles = columnNames.slice();\r\n        if (this.roles) {\r\n            // Roles must be copied to avoid modifying the index everytime there's a change from ngOnChanges.\r\n            /** @type {?} */\r\n            var copyRoles_1 = this.roles.map((/**\r\n             * @param {?} role\r\n             * @return {?}\r\n             */\r\n            function (role) { return Object.assign({}, role); }));\r\n            copyRoles_1.forEach((/**\r\n             * @param {?} role\r\n             * @return {?}\r\n             */\r\n            function (role) {\r\n                var e_1, _a;\r\n                /** @type {?} */\r\n                var roleData = {\r\n                    type: role.type,\r\n                    role: role.role\r\n                };\r\n                if (role.p) {\r\n                    roleData.p = role.p;\r\n                }\r\n                if (role.index != null) {\r\n                    columnNamesWithRoles.splice(role.index + 1, 0, roleData);\r\n                    try {\r\n                        for (var copyRoles_2 = __values(copyRoles_1), copyRoles_2_1 = copyRoles_2.next(); !copyRoles_2_1.done; copyRoles_2_1 = copyRoles_2.next()) {\r\n                            var otherRole = copyRoles_2_1.value;\r\n                            if (otherRole === role) {\r\n                                continue;\r\n                            }\r\n                            if (otherRole.index > role.index) {\r\n                                otherRole.index++;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (copyRoles_2_1 && !copyRoles_2_1.done && (_a = copyRoles_2.return)) _a.call(copyRoles_2);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }\r\n                else {\r\n                    columnNamesWithRoles.push(roleData);\r\n                }\r\n            }));\r\n        }\r\n        return columnNamesWithRoles;\r\n    };\r\n    GoogleChartComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    // tslint:disable-next-line:component-selector\r\n                    selector: 'google-chart',\r\n                    template: '',\r\n                    exportAs: 'google-chart',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    styles: [':host { width: fit-content; display: block; }']\r\n                }] }\r\n    ];\r\n    /** @nocollapse */\r\n    GoogleChartComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: ScriptLoaderService }\r\n    ]; };\r\n    GoogleChartComponent.propDecorators = {\r\n        data: [{ type: Input }],\r\n        columnNames: [{ type: Input }],\r\n        roles: [{ type: Input }],\r\n        title: [{ type: Input }],\r\n        width: [{ type: Input }],\r\n        height: [{ type: Input }],\r\n        options: [{ type: Input }],\r\n        type: [{ type: Input }]\r\n    };\r\n    return GoogleChartComponent;\r\n}(RawChartComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar GOOGLE_CHARTS_PROVIDERS = [\r\n    {\r\n        provide: ScriptLoaderService,\r\n        useFactory: setupScriptLoaderService,\r\n        deps: [LOCALE_ID, GOOGLE_API_KEY, CHART_VERSION]\r\n    }\r\n];\r\nvar GoogleChartsModule = /** @class */ (function () {\r\n    function GoogleChartsModule() {\r\n    }\r\n    /**\r\n     * @param {?=} googleApiKey\r\n     * @param {?=} chartVersion\r\n     * @return {?}\r\n     */\r\n    GoogleChartsModule.forRoot = /**\r\n     * @param {?=} googleApiKey\r\n     * @param {?=} chartVersion\r\n     * @return {?}\r\n     */\r\n    function (googleApiKey, chartVersion) {\r\n        return {\r\n            ngModule: GoogleChartsModule,\r\n            providers: [\r\n                GOOGLE_CHARTS_PROVIDERS,\r\n                { provide: GOOGLE_API_KEY, useValue: googleApiKey ? googleApiKey : '' },\r\n                { provide: CHART_VERSION, useValue: chartVersion ? chartVersion : '46' }\r\n            ]\r\n        };\r\n    };\r\n    GoogleChartsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [ScriptLoaderService],\r\n                    declarations: [GoogleChartComponent, RawChartComponent],\r\n                    exports: [GoogleChartComponent, RawChartComponent]\r\n                },] }\r\n    ];\r\n    return GoogleChartsModule;\r\n}());\r\n/**\r\n * @param {?} localeId\r\n * @param {?} googleApiKey\r\n * @param {?} chartVersion\r\n * @return {?}\r\n */\r\nfunction setupScriptLoaderService(localeId, googleApiKey, chartVersion) {\r\n    return new ScriptLoaderService(localeId, googleApiKey, chartVersion);\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { GoogleChartComponent, GoogleChartPackagesHelper, GoogleChartsModule, RawChartComponent, ScriptLoaderService, GOOGLE_CHARTS_PROVIDERS as ɵa, setupScriptLoaderService as ɵb, CHART_VERSION as ɵc, GOOGLE_API_KEY as ɵd };\n//# sourceMappingURL=angular-google-charts.js.map\n","import { Auth } from 'src/app/shared/auth';\nimport { Request } from 'src/app/shared/request';\nimport { GlobalService } from '../../shared/services/global.service';\nimport { Application } from './application';\nexport class Autoloader {\n\n  public static COMPANIES;\n  public static BRANCHES;\n  public static PAYMENT_TYPES;\n  public static DEPARTMENTS;\n  public static CATEGORIES;\n  public static SERVICES;\n  public static CITIES;\n  public static AREAS;\n  public static COUNTRIES;\n  public static EXPENSES_TYPES;\n  public static STATUS;\n  public static TRANS_TYPES;\n\n\n  public static autoload(service: GlobalService) {\n    if (!Auth.getApiToken())\n      return;\n\n    // load companies\n    if (!Autoloader.COMPANIES)\n    Request.addToQueue({\n      observer: service.get('companies', {paging: '0'}),\n      action: (res) => { Autoloader.COMPANIES = res; }\n    });\n\n    // load branches\n    if (!Autoloader.BRANCHES)\n    Request.addToQueue({\n      observer: service.get('branches'),\n      action: (res) => { Autoloader.BRANCHES = res; }\n    });\n\n    // load payment-types\n    if (!Autoloader.PAYMENT_TYPES)\n    Request.addToQueue({\n      observer: service.get('payment-types'),\n      action: (res) => { Autoloader.PAYMENT_TYPES = res; }\n    });\n\n    // load departments\n    if (!Autoloader.DEPARTMENTS)\n    Request.addToQueue({\n      observer: service.get('departments'),\n      action: (res) => { Autoloader.DEPARTMENTS = res; }\n    });\n\n    // load categories\n    if (!Autoloader.CATEGORIES)\n    Request.addToQueue({\n      observer: service.get('awb-categories'),\n      action: (res) => { Autoloader.CATEGORIES = res; }\n    });\n\n    // load services\n    if (!Autoloader.SERVICES)\n    Request.addToQueue({\n      observer: service.get('services'),\n      action: (res) => { Autoloader.SERVICES = res; }\n    });\n\n    // load cities\n    if (!Autoloader.CITIES)\n    Request.addToQueue({\n      observer: service.get('cities'),\n      action: (res) => { Autoloader.CITIES = res; }\n    });\n\n    // load areas\n    if (!Autoloader.AREAS)\n    Request.addToQueue({\n      observer: service.get('areas'),\n      action: (res) => { Autoloader.AREAS = res; }\n    });\n\n    // load countries\n    if (!Autoloader.COUNTRIES)\n    Request.addToQueue({\n      observer: service.get('countries'),\n      action: (res) => { Autoloader.COUNTRIES = res; }\n    });\n\n    // load expense-types\n    if (!Autoloader.EXPENSES_TYPES)\n    Request.addToQueue({\n      observer: service.get('expense-types'),\n      action: (res) => { Autoloader.EXPENSES_TYPES = res; }\n    });\n\n    // load load status\n    if (!Autoloader.STATUS)\n    Request.addToQueue({\n      observer: service.get('status'),\n      action: (res) => { Autoloader.STATUS = res; }\n    });\n\n    // load load TRANS_TYPES\n    if (!Autoloader.TRANS_TYPES)\n    Request.addToQueue({\n      observer: service.get('trans-types'),\n      action: (res) => { Autoloader.TRANS_TYPES = res; }\n    });\n\n    // start load the queue\n    Request.fire(() =>{\n      Application.endLoading();\n    });\n  }\n\n  //****  setter  */\n  public static setCompanies(res) {\n    Autoloader.COMPANIES = res;\n  }\n\n  public static setBranches(res) {\n    Autoloader.BRANCHES = res;\n  }\n\n  public static setPaymentTypes(res) {\n    Autoloader.PAYMENT_TYPES = res;\n  }\n\n  public static setDepartments(res) {\n    Autoloader.DEPARTMENTS = res;\n  }\n\n  public static setCategories(res) {\n    Autoloader.CATEGORIES = res;\n  }\n\n  public static setServices(res) {\n    Autoloader.SERVICES = res;\n  }\n\n  public static setCities(res) {\n    Autoloader.CITIES = res;\n  }\n\n  public static setAreas(res) {\n    Autoloader.AREAS = res;\n  }\n\n  public static setCountries(res) {\n    Autoloader.COUNTRIES = res;\n  }\n\n  public static setExpenses(res) {\n    Autoloader.EXPENSES_TYPES = res;\n  }\n\n  public static setStatus(res) {\n    Autoloader.STATUS = res;\n  }\n\n  public static setTransTypes(res) {\n    Autoloader.TRANS_TYPES = res;\n  }\n\n\n\n\n  /***  getters */\n  public static companies() {\n    return Autoloader.COMPANIES;\n  }\n\n  public static branches() {\n    return Autoloader.BRANCHES;\n  }\n\n  public static paymentTypes() {\n    return Autoloader.PAYMENT_TYPES;\n  }\n\n  public static departments() {\n    return Autoloader.DEPARTMENTS;\n  }\n\n  public static categories() {\n    return Autoloader.CATEGORIES;\n  }\n\n  public static services() {\n    return Autoloader.SERVICES;\n  }\n\n  public static cities() {\n    return Autoloader.CITIES;\n  }\n\n  public static areas() {\n    return Autoloader.AREAS;\n  }\n\n  public static countries() {\n    return Autoloader.COUNTRIES;\n  }\n\n  public static expenses() {\n    return Autoloader.EXPENSES_TYPES;\n  }\n\n  public static status() {\n    return Autoloader.STATUS;\n  }\n\n  public static transTypes() {\n    return Autoloader.TRANS_TYPES;\n  }\n\n}\n","export class Request {\n\n  public static queue = [];\n  public static isFired = false;\n\n  /**\n   * add to queue\n   * @param object {observer: any, action: function()}\n   */\n  public static addToQueue(object: any) {\n    if (!object.key)\n      object.key = new Date().getMilliseconds();\n\n    if (!object.times)\n      object.times = 1;\n    else\n      object.times += 1;\n\n    Request.queue.push(object);\n    Request.isFired = true;\n  }\n\n  /**\n   * start the queue\n   *\n   */\n  public static fire(action=null, asnc=false) {\n    //if (Request.isFired)\n    //  return;\n    let object = Request.queue.pop();\n\n    if (object) {\n      object.observer.subscribe((res)=>{\n        object.action(res);\n      }, (error)=>{\n        // console.log(\"errors : \" + error.statusText);\n        if (object.times <= 10 || error.status == 429)\n          Request.queue.push(object);\n      }, ()=>{\n        if (!asnc) {\n          // console.log(\"queue size : \" + (Request.queue.length) + \", key : \" + object.key + \", times : \" + object.times);\n          Request.fire(action, asnc);\n        }\n      });\n\n      if (asnc) {\n        // console.log(\"queue size : \" + (Request.queue.length) + \", key : \" + object.key + \", times : \" + object.times);\n        Request.fire(action, asnc);\n      }\n    } else {\n      Request.isFired = false;\n      if (action)\n        action();\n      return;\n    }\n  }\n\n\n}\n"],"sourceRoot":""}